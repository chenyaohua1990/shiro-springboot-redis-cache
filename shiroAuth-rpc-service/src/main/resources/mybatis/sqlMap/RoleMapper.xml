<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.platform.dao.auth.IRoleDao">
    <resultMap id="BaseResultMap" type="com.platform.api.auth.entity.Role">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="role" property="role" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="resource_ids" property="resourceIds" jdbcType="VARCHAR"/>
        <result column="available" property="available" jdbcType="BIT"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, role, description, resource_ids, available
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from ss_role
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ss_role
    </select>
    <select id="selectPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ss_role
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from ss_role
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.platform.api.auth.entity.Role">
        insert into ss_role (id, role, description,available)
        values (#{id,jdbcType=BIGINT}, #{role,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},#{available,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.platform.api.auth.entity.Role">
        insert into ss_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="role != null">
                role,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="available != null">
                available,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="role != null">
                #{role,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                #{available,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.platform.api.auth.entity.Role">
        update ss_role
        <set>
            <if test="role != null">
                role = #{role,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="resourceIds != null">
                resource_ids = #{resourceIds,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                available = #{available,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.platform.api.auth.entity.Role">
        update ss_role
        set role = #{role,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        available = #{available,jdbcType=BIT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteRoleResource">
        delete from ss_role_resource
        where role_id = #{roleId}
    </delete>

    <insert id="insertRoleResource" useGeneratedKeys="true">
        INSERT INTO `ss_role_resource` (`role_id`, `resource_id`) VALUES (#{roleId}, #{resourceId})
    </insert>

    <select id="findResourceIdsByRoleIds" resultType="java.lang.Long">
        select resource_id from ss_role_resource
        where role_id in
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>